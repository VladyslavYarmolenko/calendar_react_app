{"version":3,"sources":["components/Calendar/calendar.js","components/Calendar/index.jsx","App.jsx","index.js"],"names":["DAYS_IN_MONTH","Month","areEqual","a","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","day","dayInMonth","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","i","j","undefined","Calendar","state","props","currentDate","selectedDate","handlePrevMonthButtonClick","console","log","setState","handleNextMonthButtonClick","handleSelectChange","yearSelect","value","monthSelect","handleDayClick","setCurrentDate","this","years","monthNames","weekDayNames","monthData","calendar","className","onClick","onChange","ref","element","map","name","index","week","isToday","classnames","React","Component","defaultProps","App","useState","setDate","toLocaleDateString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65d0bb54.chunk.js","sourcesContent":["const DAYS_IN_WEEK = 7;\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 30, 31,30,31]\r\n\r\nconst Month = {\r\n  January: 0,\r\n  February: 1,\r\n  March: 2,\r\n  April: 3,\r\n  May: 4,\r\n  June: 5,\r\n  July: 6,\r\n  August: 7,\r\n  September: 8,\r\n  October: 9,\r\n  November: 10,\r\n  December: 11\r\n}\r\n\r\n\r\nexport function areEqual(a, b){\r\n  if (!a || !b) return false;\r\n\r\n  return (\r\n    a.getFullYear() === b.getFullYear() && \r\n    a.getMonth() === b.getMonth() && \r\n    a.getDate() === b.getDate()\r\n  );\r\n}\r\n\r\nexport function isLeapYear(year){\r\n  return !((year % 4) || (!( year % 100) && (year % 400)));\r\n}\r\n\r\nexport function getDaysInMonth(date) {\r\n   const month = date.getMonth();\r\n   const year = date.getFullYear();\r\n   const daysInMonth = DAYS_IN_MONTH[month];\r\n\r\n   if (isLeapYear(year) && month === Month.February) {\r\n    return daysInMonth + 1\r\n   } else {\r\n     return daysInMonth;\r\n   }\r\n}\r\n\r\nexport function getDayOfWeek(date){\r\n  const dayOfWeek = date.getDay();\r\n\r\n  if (dayOfWeek === 0) return 6;\r\n\r\n  return dayOfWeek - 1;\r\n}\r\n\r\nexport function getMonthData(year, month) {\r\n \r\n  const result = [];\r\n  const date = new Date(year, month);\r\n  let day = 1;\r\n  const dayInMonth = getDaysInMonth(date);\r\n  const monthStartsOn = getDayOfWeek(date);\r\n\r\n  for (let i = 0; i < (dayInMonth + monthStartsOn) / DAYS_IN_WEEK; i++){\r\n    result[i] = [];\r\n\r\n    for (let j = 0; j < DAYS_IN_WEEK; j++){\r\n\r\n      if((i === 0 && j < monthStartsOn) ||  day > dayInMonth){\r\n        result[i][j] = undefined;\r\n      } else {\r\n        result[i][j] = new Date(year, month, day++)\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}","import React from 'react';\r\nimport * as calendar from './calendar'\r\nimport './index.css';\r\nimport classnames from 'classnames'\r\n\r\nexport default class Calendar extends React.Component{\r\n  static defaultProps = {\r\n    date: new Date(),\r\n    years: [2010, 2011, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021],\r\n    monthNames: [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"],\r\n    weekDayNames: [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\"],\r\n    // onChange:  Function.prototype,\r\n  }\r\n\r\n  state = {\r\n    date: this.props.date,\r\n    currentDate: new Date(),\r\n    selectedDate: null,\r\n  };\r\n\r\n  get year(){\r\n    return this.state.date.getFullYear();\r\n  }\r\n\r\n  get month(){\r\n    return this.state.date.getMonth();\r\n  }\r\n\r\n  get day(){\r\n    return this.state.date.getDate();\r\n  }\r\n\r\n  handlePrevMonthButtonClick = () => {\r\n    const date = new Date(this.year, this.month - 1);\r\n    console.log(date);\r\n    this.setState({date});\r\n  }\r\n\r\n  handleNextMonthButtonClick = () => {\r\n    const date = new Date(this.year, this.month + 1);\r\n    console.log(date);\r\n    this.setState({date});\r\n  }\r\n\r\n  handleSelectChange = () => {\r\n    const year = this.yearSelect.value;\r\n    const month = this.monthSelect.value;\r\n    const date  = new Date(year, month);\r\n    console.log(date)\r\n    this.setState({selectedDate: date});\r\n  }\r\n\r\n  handleDayClick = date => {\r\n    console.log(date);\r\n    this.setState({selectedDate: date});\r\n    this.props.setCurrentDate(date);\r\n  }\r\n  render() {\r\n\r\n    const  { years, monthNames, weekDayNames,} = this.props\r\n    const monthData = calendar.getMonthData(this.year, this.month);\r\n    const { currentDate, selectedDate } = this.state;\r\n\r\n    return (\r\n      <div className='calendar'>\r\n        <header>\r\n          <button onClick={this.handlePrevMonthButtonClick}>{'<'}</button>\r\n          <select onChange={this.handleSelectChange}\r\n          ref={element => this.monthSelect = element}\r\n          value={this.month}>\r\n            {monthNames.map((name, index) => \r\n              <option key={name} value={index}>{name}</option>\r\n            )}\r\n          </select>\r\n          <select onChange={this.handleSelectChange}\r\n          ref={element => this.yearSelect = element}\r\n          value={this.year}>\r\n            {years.map(year =>\r\n              <option key={year} value={year}>{year}</option>)}\r\n          </select>\r\n          <button onClick={this.handleNextMonthButtonClick}>{'>'}</button>\r\n        </header>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {weekDayNames.map(name =>\r\n                <th key={name}>{name}</th>)}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {monthData.map((week, index) => \r\n            <tr key={index} className=\"week\">\r\n              {\r\n                week.map((date, index) => {\r\n                  const isToday = calendar.areEqual(date, currentDate);\r\n                  return date \r\n                  ? <td\r\n                      className={classnames('day', {\r\n                        'today': isToday,\r\n                        'selected': calendar.areEqual(date, selectedDate)\r\n                      })}\r\n                      key={index}\r\n                      onClick={() => this.handleDayClick(date)}\r\n                    >\r\n                     {date.getDate()}\r\n                    </td> \r\n                  : <td key={index}></td>\r\n                })\r\n              }\r\n            </tr>)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React, { useState } from 'react'\r\nimport Calendar from './components/Calendar';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [date , setDate] = useState(null);\r\n  return (\r\n    <div className=\"App\">\r\n      {date && <p>Выбранная дата:{date.toLocaleDateString()}</p>}\r\n      <Calendar\r\n      setCurrentDate={setDate}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}